/*
        double[][] labClusterValue = new double[centers.rows()][4];
        for (int i = 0; i < samples.rows(); i++) {
            labClusterValue[(int) (labels.get(i, 0))[0]][0] = labClusterValue[(int) (labels.get(i, 0))[0]][0] + (samples.get(i, 0))[0];
            labClusterValue[(int) (labels.get(i, 0))[0]][1] = labClusterValue[(int) (labels.get(i, 0))[0]][1] + (samples.get(i, 1))[0];
            labClusterValue[(int) (labels.get(i, 0))[0]][2] = labClusterValue[(int) (labels.get(i, 0))[0]][2] + (samples.get(i, 2))[0];
            labClusterValue[(int) (labels.get(i, 0))[0]][3] = labClusterValue[(int) (labels.get(i, 0))[0]][3] + 1;
        }nda guna*/
        //System.out.println("==============================================");
        //System.out.println("Lab Value and Total Element:");

        /*for (int i = 0; i < labClusterValue.length; i++) {
            for (int j = 0; j < labClusterValue[0].length; j++) {
                System.out.printf("%.2f", labClusterValue[i][j]);
                System.out.print(" ");
            }
            System.out.println("");
        }*/
//        double[] intraClusterDistanceValue = new double[centers.rows()];
//        for (int i = 0; i < centers.rows(); i++) {
//            double[] labCenterValueL = centers.get(i, 0);
//            double[] labCenterValueA = centers.get(i, 1);
//            double[] labCenterValueB = centers.get(i, 2);
//            System.out.println(labCenterValueL[0]);
//            System.out.println(labClusterValue[i][0]/labClusterValue[i][3]);
//            System.out.println(labCenterValueA[0]);
//            System.out.println(labClusterValue[i][1]/labClusterValue[i][3]);
//            System.out.println(labCenterValueB[0]);
//            System.out.println(labClusterValue[i][2]/labClusterValue[i][3]);
//            intraClusterDistanceValue[i] = Math.sqrt(Math.pow(labClusterValue[i][0] - labCenterValueL[0], 2)
//                    + Math.pow(labClusterValue[i][1] - labCenterValueA[0], 2)
//                    + Math.pow(labClusterValue[i][2] - labCenterValueB[0], 2));
//            System.out.printf("%.2f",intraClusterDistanceValue[i]);
//            System.out.println("");
//        }